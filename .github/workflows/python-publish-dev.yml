# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package Development Version

#on:
#  schedule:
#    - cron: '0 2 * * *' # run at 2 AM UTC

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      env:
        TWINE_REPOSITORY_URL: https://test.pypi.org/legacy/
        TWINE_USERNAME: ${{ secrets.TEST_PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
      run: |
        # All of the DIST_UPLOAD_OPTIONS are set through the TWINE_*
        # environment variables, so elliminate the default reference to the
        # test PyPI server.
        echo REPO=${TWINE_REPOSITORY_URL} USERNAME=${TWINE_USERNAME}
        make maintainer-clean check dist-upload

    - name: Upload math result for job 1
        uses: actions/upload-artifact@v1
        with:
          name: Distribution artifacts
          path: dist/*
